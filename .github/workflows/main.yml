name: Build and Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use the appropriate Node.js version
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build React app
      - name: Build React app
        run: npm run build

      # Step 5: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          # Package the build and deploy to Elastic Beanstalk
          zip -r deploy.zip . # Zip the whole project, excluding node_modules
          
          # Upload the zip file to S3
          aws s3 cp deploy.zip s3://$AWS_S3_BUCKET/deploy.zip

          # Create a new application version in Elastic Beanstalk
          aws elasticbeanstalk create-application-version \
            --application-name $EB_APP_NAME \
            --version-label $GITHUB_SHA \
            --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=deploy.zip

          # Update the Elastic Beanstalk environment
          aws elasticbeanstalk update-environment \
            --environment-name $EB_ENV_NAME \
            --version-label $GITHUB_SHA

      # Optional: Clean up old versions
      - name: Clean up old versions
        run: |
          aws elasticbeanstalk delete-application-version \
            --application-name $EB_APP_NAME \
            --version-label $(aws elasticbeanstalk describe-application-versions \
            --application-name $EB_APP_NAME \
            --query "ApplicationVersions[?VersionLabel!='${GITHUB_SHA}'].VersionLabel" \
            --output text | head -n 1) --delete
