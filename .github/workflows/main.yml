name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - master  # Trigger deployment on push to master (or main if that's your default branch)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install

      - name: Build the app
        run: |
          npm run build

      - name: Zip the build folder
        run: |
          # Ensure the correct folder is zipped (./dist or as per your build output)
          zip -r myapp.zip ./dist

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          # Upload the zip file to S3 for Elastic Beanstalk deployment
          aws s3 cp myapp.zip s3://${{ secrets.AWS_S3_BUCKET }}/myapp.zip

      - name: Create Application Version in Elastic Beanstalk
        id: create_version
        run: |
          # Generate a unique version label based on date-time
          VERSION_LABEL=$(date +%Y%m%d%H%M%S)
          # Create the application version
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=myapp.zip
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

      - name: Deploy to Elastic Beanstalk
        run: |
          # Use the version label from the previous step and deploy to Elastic Beanstalk
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label ${{ env.VERSION_LABEL }}
